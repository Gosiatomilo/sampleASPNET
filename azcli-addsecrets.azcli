# Fix current user permissions for immediate ACR access
# Get current user's object ID
CURRENT_USER_ID=$(az ad signed-in-user show --query id -o tsv)
SUBSCRIPTION_ID=$(az account show --query id -o tsv)

echo "Current User Object ID: $CURRENT_USER_ID"
echo "Subscription ID: $SUBSCRIPTION_ID"

# Grant current user ACR permissions for immediate access
echo "Granting ACR permissions to current user..."
az role assignment create \
  --assignee $CURRENT_USER_ID \
  --role "AcrPush" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerRegistry/registries/aksmfcr01"

az role assignment create \
  --assignee $CURRENT_USER_ID \
  --role "AcrPull" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerRegistry/registries/aksmfcr01"

# Also grant Reader permission on the registry itself
az role assignment create \
  --assignee $CURRENT_USER_ID \
  --role "Reader" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerRegistry/registries/aksmfcr01"

echo "Permissions granted. Waiting 60 seconds for propagation..."
Start-Sleep 60

# Login to ACR to refresh credentials
echo "Logging into ACR..."
az acr login --name aksmfcr01

echo ""
echo "=== GitHub Actions Setup ==="
echo ""

# 1. Create App Registration for GitHub Actions
echo "Creating App Registration for GitHub Actions..."
az ad app create --display-name "GitHub-sampleASPNET-Deploy"

# 2. Create Service Principal (get the appId from step 1)
APP_ID=$(az ad app list --display-name "GitHub-sampleASPNET-Deploy-2" --query "[0].appId" -o tsv)

az ad sp create --id "$APP_ID"

# 3. Get your subscription and tenant IDs
TENANT_ID=$(az account show --query tenantId -o tsv)

# 4. Configure workload identity federation for your GitHub repo
echo "Configuring workload identity federation..."
az ad app federated-credential create \
  --id "$APP_ID" \
  --parameters '{
    "name": "github-main-branch",
    "issuer": "https://token.actions.githubusercontent.com",
    "subject": "repo:mifurm/sampleASPNET:ref:refs/heads/main",
    "audiences": ["api://AzureADTokenExchange"]
  }'

# 5. Assign ACR permissions to GitHub Actions service principal
echo "Assigning ACR permissions to GitHub Actions..."
az role assignment create \
  --assignee "$APP_ID" \
  --role "AcrPush" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerRegistry/registries/aksmfcr01"

az role assignment create \
  --assignee $APP_ID \
  --role "Reader" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerRegistry/registries/aksmfcr01"

az role assignment create \
  --assignee $APP_ID \
  --role "Container Registry Tasks Contributor" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerRegistry/registries/aksmfcr01"


# 6. Assign AKS permissions to GitHub Actions service principal
echo "Assigning AKS permissions to GitHub Actions..."
az role assignment create \
  --assignee $APP_ID \
  --role "Azure Kubernetes Service Cluster User Role" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/aks01mf/providers/Microsoft.ContainerService/managedClusters/aks01mf"

# 7. Display the secrets to add to GitHub
echo ""
echo "=== GitHub Secrets Configuration ==="
echo "Add these secrets to your GitHub repository:"
echo ""
echo "AZURE_CLIENT_ID: $APP_ID"
echo "AZURE_TENANT_ID: $TENANT_ID"
echo "AZURE_SUBSCRIPTION_ID: $SUBSCRIPTION_ID"
echo ""
echo "=== Test Command ==="
echo "You can now test the ACR build with:"
echo "az acr build --image aksmfcr01.azurecr.io/sampleASPNET:latest --registry aksmfcr01 -g aks01mf ."